[33mcommit 5b3eb003bc703a8ba552c90f4c33cb830a25f2b3[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mrecovery-branch[m[33m, [m[1;32mStudents[m[33m)[m
Author: Raghad Alshammari <Raghad.alshammari@kcl.ac.uk>
Date:   Fri Nov 22 15:57:40 2024 +0000

    Added the students functionality

[1mdiff --git a/code_tutors/urls.py b/code_tutors/urls.py[m
[1mindex f89612a..4d6a574 100644[m
[1m--- a/code_tutors/urls.py[m
[1m+++ b/code_tutors/urls.py[m
[36m@@ -29,5 +29,10 @@[m [murlpatterns = [[m
     path('password/', views.PasswordView.as_view(), name='password'),[m
     path('profile/', views.ProfileUpdateView.as_view(), name='profile'),[m
     path('sign_up/', views.SignUpView.as_view(), name='sign_up'),[m
[32m+[m[32m    path('students/',views.students, name='students'),[m
[32m+[m[32m    path('students/<int:student_id>',views.show_student, name='show_student'),[m
[32m+[m[32m    path('create_student/',views.create_student, name='create_student'),[m
[32m+[m[32m    path('update_student/<int:student_id>', views.update_student, name='update_student'),[m
[32m+[m[32m    path('delete_student/<int:student_id>', views.delete_student, name='delete_student'),[m
 ][m
 urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)[m
\ No newline at end of file[m
[1mdiff --git a/tutorials/forms.py b/tutorials/forms.py[m
[1mindex bd1e2ab..3e13abf 100644[m
[1m--- a/tutorials/forms.py[m
[1m+++ b/tutorials/forms.py[m
[36m@@ -4,6 +4,9 @@[m [mfrom django.contrib.auth import authenticate[m
 from django.core.validators import RegexValidator[m
 from .models import User[m
 [m
[32m+[m[32mfrom .models import Student[m
[32m+[m
[32m+[m
 class LogInForm(forms.Form):[m
     """Form enabling registered users to log in."""[m
 [m
[36m@@ -107,4 +110,44 @@[m [mclass SignUpForm(NewPasswordMixin, forms.ModelForm):[m
             email=self.cleaned_data.get('email'),[m
             password=self.cleaned_data.get('new_password'),[m
         )[m
[31m-        return user[m
\ No newline at end of file[m
[32m+[m[32m        return user[m
[32m+[m
[32m+[m
[32m+[m[32mclass StudentForm(forms.ModelForm):[m
[32m+[m[32m    """Form to create or update students"""[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Student[m
[32m+[m[32m        fields = ['name', 'username', 'email', 'allocated'][m
[32m+[m
[32m+[m[32m    def clean(self):[m
[32m+[m[32m        cleaned_data = super().clean()[m
[32m+[m[32m        email = cleaned_data.get('email')[m
[32m+[m[32m        username = cleaned_data.get('username')[m
[32m+[m[32m        allocated = cleaned_data.get('allocated')[m
[32m+[m
[32m+[m[32m        # Get the current student instance ID if updating, otherwise None[m
[32m+[m[32m        student_id = self.instance.id if self.instance and self.instance.id else None[m
[32m+[m
[32m+[m[32m        # Case-insensitive email validation[m
[32m+[m[32m        if email:[m
[32m+[m[32m            student_id = self.instance.id if self.instance else None[m
[32m+[m[32m            # Ensure email is unique, case insensitive, excluding the current student's email[m
[32m+[m[32m            if Student.objects.exclude(id=student_id).filter(email=email.lower()).exists():[m
[32m+[m[32m                self.add_error('email', "A student with this email already exists.")[m
[32m+[m[32m            # Normalize email to lowercase[m
[32m+[m[32m            cleaned_data['email'] = email.lower()[m
[32m+[m
[32m+[m[32m        # Ensure username is unique (excluding the current student's username)[m
[32m+[m[32m        if username:[m
[32m+[m[32m            if Student.objects.exclude(id=student_id).filter(username=username).exists():[m
[32m+[m[32m                self.add_error('username', "This username is already taken.")[m
[32m+[m
[32m+[m[32m        # Boolean validation for allocated[m
[32m+[m[32m        if allocated is not None:[m
[32m+[m[32m            if isinstance(allocated, bool):[m
[32m+[m[32m                pass  # Valid boolean value[m
[32m+[m[32m            else:[m
[32m+[m[32m                self.add_error('allocated', "Allocated must be a boolean value.")[m
[32m+[m
[32m+[m[32m        return cleaned_data[m
[41m+[m
[1mdiff --git a/tutorials/migrations/0002_student.py b/tutorials/migrations/0002_student.py[m
[1mnew file mode 100644[m
[1mindex 0000000..af6f6d2[m
[1m--- /dev/null[m
[1m+++ b/tutorials/migrations/0002_student.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# Generated by Django 4.2.16 on 2024-11-21 18:38[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('tutorials', '0001_initial'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Student',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=255)),[m
[32m+[m[32m                ('username', models.CharField(max_length=255)),[m
[32m+[m[32m                ('email', models.EmailField(max_length=254)),[m
[32m+[m[32m                ('allocated', models.BooleanField(default=False)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/tutorials/migrations/0003_alter_student_email_alter_student_username.py b/tutorials/migrations/0003_alter_student_email_alter_student_username.py[m
[1mnew file mode 100644[m
[1mindex 0000000..528ed81[m
[1m--- /dev/null[m
[1m+++ b/tutorials/migrations/0003_alter_student_email_alter_student_username.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# Generated by Django 4.2.16 on 2024-11-21 21:21[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('tutorials', '0002_student'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='student',[m
[32m+[m[32m            name='email',[m
[32m+[m[32m            field=models.EmailField(max_length=254, unique=True),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='student',[m
[32m+[m[32m            name='username',[m
[32m+[m[32m            field=models.CharField(max_length=255, unique=True),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/tutorials/models.py b/tutorials/models.py[m
[1mindex ad4c891..c501ce7 100644[m
[1m--- a/tutorials/models.py[m
[1m+++ b/tutorials/models.py[m
[36m@@ -39,4 +39,27 @@[m [mclass User(AbstractUser):[m
     def mini_gravatar(self):[m
         """Return a URL to a miniature version of the user's gravatar."""[m
         [m
[31m-        return self.gravatar(size=60)[m
\ No newline at end of file[m
[32m+[m[32m        return self.gravatar(size=60)[m
[32m+[m
[32m+[m[32mclass Student(models.Model):[m
[32m+[m[32m    name = models.CharField(max_length=255)[m
[32m+[m[32m    username = models.CharField(max_length=255, unique=True)[m
[32m+[m[32m    email = models.EmailField(unique=True)[m
[32m+[m[32m    allocated = models.BooleanField(default=False)[m
[32m+[m
[32m+[m[32m    def save(self, *args, **kwargs):[m
[32m+[m[32m        # Normalize email to lowercase[m
[32m+[m[32m        if self.email:[m
[32m+[m[32m            self.email = self.email.lower()[m
[32m+[m[32m        super().save(*args, **kwargs)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        # Show Yes/No for the boolean field[m
[32m+[m[32m        return f"{self.name} ({self.username}) ({self.email}), Allocated? {'Yes' if self.allocated else 'No'}"[m
[32m+[m
[32m+[m[32m    def description(self):[m
[32m+[m[32m        # Provide a short, user-readable description excluding email[m
[32m+[m[32m        allocation_status = 'allocated' if self.allocated else 'not allocated'[m
[32m+[m[32m        return f"{self.name} ({self.username}) is {allocation_status}."[m
[41m+[m
[41m+[m
[1mdiff --git a/tutorials/templates/create_student.html b/tutorials/templates/create_student.html[m
[1mnew file mode 100644[m
[1mindex 0000000..9ef92c9[m
[1m--- /dev/null[m
[1m+++ b/tutorials/templates/create_student.html[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <title>New Student</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <h1>Create a new student</h1>[m
[32m+[m[32m    <form action="{% url 'create_student' %}" method="post">[m
[32m+[m[32m        {% csrf_token %}[m
[32m+[m[32m        {{ form.as_p }}[m
[32m+[m[32m        <input type="submit" value="Create">[m
[32m+[m[32m    </form>[m
[32m+[m[32m    <a href="{% url 'students' %}">Back to Students list</a>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/tutorials/templates/delete_student.html b/tutorials/templates/delete_student.html[m
[1mnew file mode 100644[m
[1mindex 0000000..79d6b80[m
[1m--- /dev/null[m
[1m+++ b/tutorials/templates/delete_student.html[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <title>Delete Student</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <h1>Delete Student</h1>[m
[32m+[m[32m    <p>{{ context }}</p>[m
[32m+[m[32m    <form action="{% url 'delete_student' student.id %}" method="post">[m
[32m+[m[32m        {% csrf_token %}[m
[32m+[m[32m        <input type="submit" value="Confirm">[m
[32m+[m[32m    </form>[m
[32m+[m[32m    <a href="{% url 'students' %}">Cancel</a>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/tutorials/templates/show_student.html b/tutorials/templates/show_student.html[m
[1mnew file mode 100644[m
[1mindex 0000000..aea7548[m
[1m--- /dev/null[m
[1m+++ b/tutorials/templates/show_student.html[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <title>You are viewing:</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <h1>Student Info</h1>[m
[32m+[m[32m    <p><strong>Name: </strong>{{student.name}}</p>[m
[32m+[m[32m    <p><strong>Email: </strong> {{student.email}}</p>[m
[32m+[m[32m    <p><strong>About: </strong>{{student.description}}</p>[m
[32m+[m
[32m+[m[32m    <a href="{% url 'students' %}">Back to Students list</a>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/tutorials/templates/students.html b/tutorials/templates/students.html[m
[1mnew file mode 100644[m
[1mindex 0000000..8b276c2[m
[1m--- /dev/null[m
[1m+++ b/tutorials/templates/students.html[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <title>Student List</title>[m
[32m+[m[32m    <style>[m
[32m+[m[32m        table {[m
[32m+[m[32m            width: 100%;[m
[32m+[m[32m            border-collapse: collapse;[m
[32m+[m[32m        }[m
[32m+[m[32m        th, td {[m
[32m+[m[32m            border: 1px solid #ddd;[m
[32m+[m[32m            padding: 8px;[m
[32m+[m[32m            text-align: left;[m
[32m+[m[32m        }[m
[32m+[m[32m        th {[m
[32m+[m[32m            background-color: #f4f4f4;[m
[32m+[m[32m        }[m
[32m+[m[32m        a {[m
[32m+[m[32m            margin-right: 10px;[m
[32m+[m[32m            text-decoration: none;[m
[32m+[m[32m            color: #007BFF;[m
[32m+[m[32m        }[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <h1>Student List</h1>[m
[32m+[m[32m    <a href="{% url 'create_student' %}">Create Student</a>[m
[32m+[m
[32m+[m[32m    {% if students %}[m
[32m+[m[32m    <table>[m
[32m+[m[32m        <thead>[m
[32m+[m[32m            <tr>[m
[32m+[m[32m                <th>Name</th>[m
[32m+[m[32m                <th>Username</th>[m
[32m+[m[32m                <th>Email</th>[m
[32m+[m[32m                <th>Allocated</th>[m
[32m+[m[32m                <th>Actions</th>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m        </thead>[m
[32m+[m[32m        <tbody>[m
[32m+[m[32m            {% for student in students %}[m
[32m+[m[32m            <tr>[m
[32m+[m[32m                <td>{{ student.name }}</td>[m
[32m+[m[32m                <td>{{ student.username }}</td>[m
[32m+[m[32m                <td>{{ student.email }}</td>[m
[32m+[m[32m                <td>[m
[32m+[m[32m                    {% if student.allocated %}[m
[32m+[m[32m                        Yes[m
[32m+[m[32m                    {% else %}[m
[32m+[m[32m                        No[m
[32m+[m[32m                    {% endif %}[m
[32m+[m[32m                </td>[m
[32m+[m[32m                <td>[m
[32m+[m[32m                <a href="{% url 'show_student' student.id %}">Show</a>[m
[32m+[m[32m                <a href="{% url 'update_student' student.id %}">Update</a>[m
[32m+[m[32m                    <a href="{% url 'delete_student' student.id %}">Delete</a>[m
[32m+[m
[32m+[m[32m                </td>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m        </tbody>[m
[32m+[m[32m    </table>[m
[32m+[m[32m    {% else %}[m
[32m+[m[32m        <p>No students available.</p>[m
[32m+[m[32m    {% endif %}[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[32m+[m
[32m+[m
[1mdiff --git a/tutorials/templates/update_student.html b/tutorials/templates/update_student.html[m
[1mnew file mode 100644[m
[1mindex 0000000..5b8ecc1[m
[1m--- /dev/null[m
[1m+++ b/tutorials/templates/update_student.html[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <title>Update Student</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <h1>Update Student Info</h1>[m
[32m+[m[32m    <form action="{% url 'update_student' student.id %}" method="post">[m
[32m+[m[32m        {% csrf_token %}[m
[32m+[m[32m        {{ form.as_p }}[m
[32m+[m[32m        <input type="submit" value="Update">[m
[32m+[m[32m    </form>[m
[32m+[m[32m    <a href="{% url 'students' %}">Back to Students list</a>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/tutorials/tests/forms/__init__.py b/tutorials/tests/bookings/__init__.py[m
[1msimilarity index 100%[m
[1mrename from tutorials/tests/forms/__init__.py[m
[1mrename to tutorials/tests/bookings/__init__.py[m
[1mdiff --git a/tutorials/tests/models/__init__.py b/tutorials/tests/bookings/forms/__init__.py[m
[1msimilarity index 100%[m
[1mrename from tutorials/tests/models/__init__.py[m
[1mrename to tutorials/tests/bookings/forms/__init__.py[m
[1mdiff --git a/tutorials/tests/views/__init__.py b/tutorials/tests/bookings/models/__init__.py[m
[1msimilarity index 100%[m
[1mrename from tutorials/tests/views/__init__.py[m
[1mrename to tutorials/tests/bookings/models/__init__.py[m
[1mdiff --git a/tutorials/tests/bookings/views/__init__.py b/tutorials/tests/bookings/views/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/tutorials/tests/students/__init__.py b/tutorials/tests/students/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/tutorials/tests/students/forms/__init__.py b/tutorials/tests/students/forms/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/tutorials/tests/students/forms/test_student_form.py b/tutorials/tests/students/forms/test_student_form.py[m
[1mnew file mode 100644[m
[1mindex 0000000..868e38a[m
[1m--- /dev/null[m
[1m+++ b/tutorials/tests/students/forms/test_student_form.py[m
[36m@@ -0,0 +1,91 @@[m
[32m+[m[32mfrom django.test import TestCase[m
[32m+[m[32mfrom tutorials.forms import StudentForm[m
[32m+[m[32mfrom tutorials.models import Student[m
[32m+[m
[32m+[m[32mclass StudentFormTestCase(TestCase):[m
[32m+[m[32m    def setUp(self):[m
[32m+[m[32m        self.form_input = {[m
[32m+[m[32m            'name': "Doe, J.",[m
[32m+[m[32m            'username': "janedoe",[m
[32m+[m[32m            'email': "janeDoe@gmail.com",  # Note the mixed case[m
[32m+[m[32m            'allocated': True[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    # Test cases[m
[32m+[m[32m    def test_valid_form(self):[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertTrue(form.is_valid())[m
[32m+[m
[32m+[m[32m    def test_form_has_necessary_fields(self):[m
[32m+[m[32m        form = StudentForm()[m
[32m+[m[32m        self.assertIn('name', form.fields)[m
[32m+[m[32m        self.assertIn('username', form.fields)[m
[32m+[m[32m        self.assertIn('email', form.fields)[m
[32m+[m[32m        self.assertIn('allocated', form.fields)[m
[32m+[m
[32m+[m[32m    # Blank & too long testing for name and username[m
[32m+[m[32m    def test_blank_name_is_invalid(self):[m
[32m+[m[32m        self.form_input['name'] = ""[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    def test_overlong_name_is_invalid(self):[m
[32m+[m[32m        self.form_input['name'] = 'x' * 256[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    def test_blank_username_is_invalid(self):[m
[32m+[m[32m        self.form_input['username'] = ""[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    def test_overlong_username_is_invalid(self):[m
[32m+[m[32m        self.form_input['username'] = 'x' * 256[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    # Blank, overlong, case sensitivity testing for email[m
[32m+[m[32m    def test_blank_email_is_invalid(self):[m
[32m+[m[32m        self.form_input['email'] = ""[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    def test_overlong_email_is_invalid(self):[m
[32m+[m[32m        self.form_input['email'] = "x" * 255 + "@example.com"  # Exceeds the max_length of 254[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    def test_case_insensitive_email_is_invalid(self):[m
[32m+[m[32m        # Create a student with an existing email[m
[32m+[m[32m        Student.objects.create([m
[32m+[m[32m            name="John Smith", username="johnsmith", email="janedoe@gmail.com", allocated=False[m
[32m+[m[32m        )[m
[32m+[m[32m        # Attempt to submit the form with the same email but different case[m
[32m+[m[32m        form = StudentForm(data=self.form_input)[m
[32m+[m[32m        self.assertFalse(form.is_valid())[m
[32m+[m
[32m+[m[32m    # Checkbox testing for allocated[m
[32m+[m[32m    def test_checkbox_allocated_is_valid(self):[m
[32m+[m[32m        form = StudentForm()[m
[32m+[m[32m        self.assertIn('type="checkbox"', form.as_p())  # Check the HTML output contains a checkbox for allocated[m
[32m+[m
[32m+[m[32m    # Save() function test case[m
[32m+[m[32m    def test_valid_form_can_be_saved(self):[m
[32m+[m[32m        form =