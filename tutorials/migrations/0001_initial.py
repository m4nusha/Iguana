# Generated by Django 5.1.2 on 2024-12-11 17:41

import datetime
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(message='Username must consist of @ followed by at least three alphanumericals', regex='^@\\w{3,}$')])),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('tutor', 'Tutor'), ('admin', 'Admin')], default='student', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('allocated', models.BooleanField(default=False)),
                ('payment', models.CharField(choices=[('Pending', 'Pending'), ('Successful', 'Successful')], default='Pending', max_length=10)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subject', models.CharField(choices=[('Python', 'Python'), ('Java', 'Java'), ('Javascript', 'Javascript'), ('React', 'React'), ('Ruby', 'Ruby'), ('Go', 'Go'), ('HTML/CSS', 'HTML/CSS'), ('C', 'C'), ('Scala', 'Scala')], default='Python', max_length=100)),
                ('rate', models.DecimalField(decimal_places=2, default=10.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('Term1', 'Term 1'), ('Term2', 'Term 2'), ('Term3', 'Term 3')], default='Term1', max_length=10)),
                ('lesson_type', models.CharField(choices=[('Fortnight', 'Fortnight'), ('Weekly', 'Weekly'), ('Bi-Weekly', 'Bi-Weekly')], default='Weekly', max_length=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_bookings', to='tutorials.student')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutor_bookings', to='tutorials.tutor')),
            ],
            options={
                'ordering': ['term', 'lesson_type', 'student', 'tutor'],
                'unique_together': {('term', 'lesson_type', 'student', 'tutor')},
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField(default=datetime.date(2025, 1, 1))),
                ('session_time', models.TimeField(default=datetime.time(0, 0))),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600), help_text='Format: [hours]:[minutes]')),
                ('venue', models.CharField(choices=[('Bush House', 'Bush House'), ('Waterloo Campus', 'Waterloo Campus')], default='Bush House', max_length=20)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Successful', 'Successful')], default='Pending', max_length=10)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='tutorials.booking')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('booking', 'session_date', 'session_time'), name='unique_booking_session_datetime')],
            },
        ),
    ]
